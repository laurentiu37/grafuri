def afisare_graf(dictionar):
    import functools
    return functools.reduce(lambda _, pereche : f(pereche), dictionar.items(), 0)

def f(pair):
    nod, nod_asociat = pair
    import functools
    functools.reduce(lambda _, nod_asociat: print(str(nod) + " ->", str(nod_asociat)), nod_asociat, 0)
    return ""
print(afisare_graf({1:[2, 3], 2:[1], 3:[2]}))

def afisare_graf_neorientat(graf):
    import functools
    functools.reduce(lambda lista_muchii, pereche_dictionar : adaugare_muchii(pereche_dictionar, lista_muchii), graf.items(), [])

def adaugare_muchii(pereche, lista_muchii):
    import functools
    nod, lista_noduri_asociate = pereche
    return functools.reduce(lambda lista_muchii, nod_asociat : lista_muchii if (nod, nod_asociat) in lista_muchii or (nod_asociat, nod) in lista_muchii
                            else [(nod, nod_asociat)] + lista_muchii, lista_noduri_asociate, lista_muchii)
